plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.outsider'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web:3.3.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.projectlombok:lombok'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	testImplementation 'io.projectreactor:reactor-test'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
//	developmentOnly 'org.springframework.boot:spring-boot-devtools:3.3.0'
	testAnnotationProcessor 'org.projectlombok:lombok' // 테스트를 위한 세팅
	testImplementation 'org.projectlombok:lombok' // 테스트를 위한 세팅

	//	oauth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:3.3.0'
	//	security
	implementation 'org.springframework.boot:spring-boot-starter-security:3.3.0'
	testImplementation 'org.springframework.security:spring-security-test:6.3.0'
	// email authentication
	implementation 'org.springframework.boot:spring-boot-starter-mail:3.3.0'

	// validation
	implementation 'org.springframework.boot:spring-boot-starter-validation:3.3.0'
	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis:3.3.0'
	implementation 'com.google.firebase:firebase-admin:9.2.0'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-registry-prometheus'
// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-mongodb
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb:3.3.2'


	//Jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
// https://mvnrepository.com/artifact/io.github.cdimascio/java-dotenv
	implementation 'io.github.cdimascio:java-dotenv:5.2.2'

	// https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-ui
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
	implementation 'io.minio:minio:8.2.0'
// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-gateway-mvc
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway-mvc:4.1.5'

	implementation 'org.apache.kafka:kafka-clients'
	implementation 'org.springframework.kafka:spring-kafka'
	// Kafka Streams
	implementation 'org.apache.kafka:kafka-streams'
//	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch:3.3.2'
	// https://mvnrepository.com/artifact/org.springframework.data/spring-data-elasticsearch
	implementation 'org.springframework.data:spring-data-elasticsearch:5.3.3'
// https://mvnrepository.com/artifact/org.testcontainers/elasticsearch
	testImplementation 'org.testcontainers:elasticsearch:1.19.8'
// https://mvnrepository.com/artifact/org.testcontainers/junit-jupiter
	testImplementation 'org.testcontainers:junit-jupiter:1.20.1'
	// https://mvnrepository.com/artifact/org.mapstruct/mapstruct
	implementation 'org.mapstruct:mapstruct:1.6.2'
// https://mvnrepository.com/artifact/org.mapstruct/mapstruct-processor
	annotationProcessor  'org.mapstruct:mapstruct-processor:1.6.2'
	testAnnotationProcessor   'org.mapstruct:mapstruct-processor:1.6.2'
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"

	// Querydsl 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

tasks.named('test') {
	useJUnitPlatform()
}
